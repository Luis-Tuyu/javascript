curso de javascript con código facilito.
estamos usando codepen: para simulando un servidor;

alert-
-console.log("mostrar mensa");
-document.querySelector("body").innerHTML="hola mundo";
-no debemos declarar tipos en javascript

VARIABLES
-no diferencia entre enteros y flotantes
-puedes crear una variable sin la palabra reservada "var", pero es una mala práctica
-concatenacion se utiliza con un signo de "+"

*************VIDEO 2 Número y operaciones aritméticas**************
-podemos sumar un flotante con un entero sin convertirlo
-comentarios de bloque /**/
-operadores aritméticas
    *Division /
    *suma +
    *resta -
    *modulo %
-ejemplo de modulo para obtener número par e impar
-Ejemplos usando Math

*//cuadrado de un número o elevar a una potencia
console.log(Math.pow(2,4));
//el 4 lo eleva ala potencia 2
    
    redondear un número
//entero más cercano
console.log(Math.ceil(0.2));
//redondear al entero más lejano
console.log(Math.floor(0.3));
//se imprime el número PI
console.log(Math.PI);
//genera números aleatorios
console.log(Math.random());
//raiz cuadrada
console.log("Raiz cuadrad de 4= "+ Math.sqrt(4));

        **video 3 cadenas**
operaciones básicas con una cadena, son las concatenaciones
se hace con el operador +

//obtener la longitud de la cadena
EJEMPLO:    *var a="Cadena de texto";
            console.log(a.length);

//buscar un texto dentro de una cadena de caracteres
// cuando la cadena no se encuentra desprende un -1, si la encuentra devuelve
//la posicion donde inicia la cadena  

EJEMPLO:    
            var usuario="xd luis";
            if(usuario.indexOf("luis") !=-1)
            {
            console.log("Bienvenido "+usuario);
            console.log(usuario.indexOf("luis"));
            }else{
                console.log("ERROR, no eres el usuario");
            }

//acceder a un caracter por meidod e un arreglo
EJMPLO: 
        var nombre="Luis FRancico TUyu padron";
        console.log(nombre[0]);

///acceder caracter por medio del  método chartat
var nombre="Luis";
console.log(nombre.charArt(0));

//reeemplazar una letra, solo reemplaza la primera letra o caracter
var r=nombre.replace("a","*");

//obtener una parte de la cadena
var r2=nombre.slice(1,nombre.length-1);
console.log(r2);

//mayúsuclas, minúsculas
console.log(nombre.toUpperCase());
console.log(nombre.toLowerCase());


*****video 4 condicionales*******

// ==, el dobe igual primero convierte los datos al mismo tipo, y los copara
EJEMPLO:
            var num1= 30;
            var num2= "30";
            if(num1 == num2)
            {console.log("correcto");}

            RESULTADO: true;

//===, este no convierte nada, los compara directamente
var num1= 30;
            var num2= "30";
            if(num1 === num2)
            {console.log("correcto");}

            RESULTADO: false;

//!=,  diferente de, primero convierte el tipo de dato, luego lo compara           
            var num1= 30;
            var num2= "30";
            if(num1 != num2)
            {console.log("correcto");}

            RESULTADO: false, porqie son iguales los datos

//!==, este los compara directamente, sin convertir
            var num1= 30;
            var num2= "30";
            if(num1 != num2)
            {console.log("correcto");}

            RESULTADO: true, porque no son iguales, ya  que son 2 tipos de datos distintos

********VIDEO 5 ciclo while***********+
 -se sigue ejecutando hasta que se cumpla la condición  
 -palabras reservadas
    -break: termina el ciclo 
    -continue: se salta a la siguiente iteracion dentro del ciclo
              

-ciclo do while
    -siempre se ejecutara una vez, aunue la condicio no se cumpla

***********VIDEO 6 ciclo for*************
-contine 3 parametros, es el inicio ,la condicion y el incremento o decremento
-basicamente es como los for de java 

*********VIDEO 7*********
typeof: identificar el tipo de variable que tiene, de iugal manera podemos ver si esta declarado una variable
    Ejemplo: var nu=true;
            console.log(typeof nu);


     Ejemplo 2: ver si esta declarado un variablevar num=2;
                if(typeof num == "undefined")
                {
                    console.log("variable no esta defiida, ERROR");
                }else{
                    console.log("Generando número aleatorio");
                    var aux=Math.random();
                    console.log(aux); 
                }
null: la variable existe y en un momento,explicitament se declaro a null.
        EJEMPLO: 
            var num=null;
            if(num === null)
            {
                console.log("La variable no tiene valor");
            }
undefined: devuelve este dato cuanto la variable no esta declarada o se declaro pero jamas se 
le asigno un valor.     
            EJEMPLO: 
               var num; //esta declarada pero no tiene valor, será indefinida.
                if(num === null)
                {
                    console.log("La variable no tiene valor");
                }else{
                    console.log("La variable no existe o está vacia");
                }


*********Video 8 adivina el número secreto-práctica*******     
-convertimos un dato a entero con parseInt
-promt obtenemos datos de la consola, este retorna un string

**********Video 9 seleccionar elementos del DOM****
DOM: manipular partes del Html con Javascript
-getElementById: podemos manipular el cualquier etiqueta de html, que tenga esa etiqueta
-document.getElementsByClassName("mi_clase"), se obtiene por el nombre 
de la clase 
-document.getelementByTagname("div"), este método nos sirve para encontrar todas 
las etiquetas con el nombre dado. 

*****************Video 10, eventos*********
eventos: sirve para enlazar acciones de javascrip con html.
    -onmouseover: al pasar un elemento encima del boton, realiza una funcion de javascript
    -onmouseout: cuando quito el mouse del boton, se dispara el evento

Listeners: buscamos elementos en el DOM 
    -document.getElementById("mi_div").addEventListener("click",another_clic,false)
    esta linea de codigo, primero obtiene el id del DOM, luego hay que poner
    el nombre de la funcion y de último el parametro para saber, cual alert, ejecutaremos
    primero, en dado caso que ejecutemos 2 alert.

**************************video 11, arreglos***********************
-pueden almacenar cualquier valor que le pasemos
-var arreglo= new Array(20); //creacion  de un arreglo vacio
-var arr=[10,20,30]; //recomendado definirlo de esta manera
-pueden ser de varios tipos, string, innerHTML
-son objetos
-arr.push(10); , nos permite colocar elementos al final del arreglo
-console.log(arr.length);, nos permite ver la cantidad de elementos del arreglo
-arr.unshift(2); ,  agrega el valor al inicio del arreglo
-arr.shift(); , quita el primer elemento del arreglo
-arr.pop(), elimina el último elemento del arreglo

*************************video 12,  funciones****************
-se declaran con la palabra reservada function
- function nombre_funcion (parametro1, parametro2)
{
    //codigo de la funcion
}
-return, retorna un valor especificado, puede ser un npumero o una cadena
-checar si una variable tiene valor, por ejemplo:
    b = b || 0; checa si b, tiene valor, pero si no, será undefined y por lo tanto, 
    esta será falso, entonces se le asignará 0;
    Si ya tiene valor, entonces ignora el 0

***********************video 13, funciones ************************
metodos con arreglos
-arreglo.sort(), ordena por unicode
-arreglo.reverse(), pone alrevez el arreglo
-con spli(","), con este metodo convertirmos un string en un arreglo de caracteres
        ---ver en la practica-----
-join, convertir un arreglo de caracteres en un string

*****************video 14, filter**********************
-filter es un atributo de un arreglo y tiene como parametro una funcion 
-su proposito es crear un nuevo arreglo
-el arreglo devuelve un valor que cumpla una condición, es decir que su valor booleano sea true

****************video 15,map*************
-itera todos los elementos, devolviendo un nuevo arreglo
-se le puede hacer simplemente un asignacion sin booleano
*************video 16, foreach******************
-permite iterar cad uno de los elementos del arreglo
-es como un for, pero mas simple
-solamente lo lee, si quieres modificarlo debes de acceder al dato con el index del arreglo
*************************video 17, reduce**********************************
-sirve par recorrer un arreglo e ir uniendo caracteres y dejarlo en una cadena
-de igual manera podemos sumar todos los valores de un arreglo

********************video 18, clousures********************
-los closures, es un termino general de programación
    DEF: es una funcion dentro de otra funcion la cual es libre de variables
    pero hereda las variables padre de la funcion y puede llamarlas
    es parecido a las clases y la herencia en java
-no debemos declarar variables que estan fuera de una funcion
-declarar un función dentro de otra funcion
-CÓDIGO ASINCRONO
    -el interprete de js, no espera al input ouput, acciones de html
    si no ejecuta callbacks.
-CALLBACK: funcion que se ejecuta porque se ha pasado como parametro a otra funcion
-CALLBACK: es una función que se pasa a otra función como un argumento, que luego se invoca dentro de la función externa para completar algún tipo de rutina o acción.
- si modificas una variable dentro de la funcion hijo, afecta a los demás.